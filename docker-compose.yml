services:
  postgres:
    image: postgres:latest
    env_file: .env
    environment:
      POSTGRES_PASSWORD: ${PGPASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - bsuir-rag-assistant
    profiles:
      - default
      - agent-api

  qdrant:
    image: qdrant/qdrant
    ports:
      - "6333:6333"
      - "6334:6334"
    environment:
      QDRANT__SERVICE__API_KEY: ${QDRANT_API_KEY}
    volumes:
      - qdrant_data:/qdrant/storage
    networks:
      - bsuir-rag-assistant
    profiles:
      - default
      - agent-api
      - data-loader

  redis:
    image: redis:latest
    command: redis-server --requirepass ${REDIS_PASSWORD}
    env_file: .env
    networks:
      - bsuir-rag-assistant
    profiles:
      - default
      - agent-api
  
  rabbitmq:
    image: rabbitmq:latest
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_USER}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_PASSWORD}
    ports:
      - "5672:5672"
      - "15672:15672"
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    networks:
      - bsuir-rag-assistant
    profiles:
      - default
      - agent-api

  ollama:
    image: ollama/ollama
    ports:
      - "11434:11434"
    volumes:
      - ollama_data:/root/.ollama
    environment:
      - OLLAMA_MODEL=llama3.2:1b
    # command: ["ollama", "run", "${OLLAMA_MODEL}"]
    networks:
      - bsuir-rag-assistant
    profiles:
      - default
      - agent-api
  
  # embeding-service:
  #   build:

  api-gateway:
    build:
      context: ./api-gateway
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    depends_on:
      - auth-service
      - chat-manager
      - rag-agent
    networks:
      - bsuir-rag-assistant
    profiles:
      - default
      - agent-api

  auth-service:
    build:
      context: ./auth-service
      dockerfile: Dockerfile
    ports:
      - "8001:8000"
    env_file: .env
    depends_on:
      - postgres
      - redis
    networks:
      - bsuir-rag-assistant
    profiles:
      - default
      - agent-api

  chat-manager:
    build:
      context: ./chat-manager
      dockerfile: Dockerfile
    ports:
      - "8002:8000"
    env_file: .env
    depends_on:
      - postgres
      - redis
    networks:
      - bsuir-rag-assistant
    profiles:
      - default
      - agent-api

  rag-agent:
    build: 
      context: ./rag-agent
      dockerfile: Dockerfile
    ports:
      - "8003:8000"
    env_file: .env
    depends_on:
      - qdrant
      - redis
      - rabbitmq
      - ollama
    networks:
      - bsuir-rag-assistant
    profiles:
      - default
      - agent-api

volumes:
  postgres_data:
  qdrant_data:
  rabbitmq_data:
  ollama_data:

networks:
  bsuir-rag-assistant:
    driver: bridge